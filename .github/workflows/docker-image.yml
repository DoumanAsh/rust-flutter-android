name: Docker

on:
  schedule:
    - cron: '0 7 * * 1'
  push:
    paths:
      - 'Dockerfile'
      - 'config.toml'
      - '.github/workflows/docker-image.yml'
    branches:
      - master
  workflow_dispatch:
    inputs:
      flutter_version:
        required: false
        description: 'Flutter version'
        default: 'stable'

env:
  REGISTRY: docker.io
  IMAGE_NAME: douman/rust-flutter-android

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      flutter_version: ${{ steps.flutter_version.outputs.flutter_version }}
    steps:
      - id: flutter_version
        run: |
          VERSION="${{github.event.inputs.flutter_version}}"
          if [ -z "$VERSION" ]
          then
              echo "Flutter version: 'stable'"
              echo "::set-output name=flutter_version::stable"
          else
              echo "Flutter version: '$VERSION'"
              echo "::set-output name=flutter_version::${{github.event.inputs.flutter_version}}"
          fi

  build:
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: douman
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:flutter-${{needs.prepare.outputs.flutter_version}}
          build-args: |
            FLUTTER_VERSION=${{needs.prepare.outputs.flutter_version}}
